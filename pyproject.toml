[tool.poetry]
name = "miadbviz"
version = "0.0.1"
description = "Short Description TODO"
authors = ["Sarah Szwarc <sarah.szwarc@universite-paris-saclay.fr>"]
license = "LICENSE"
readme = "README.rst"
homepage = "https://github.com/spectra-to-knowledge/miadb-visualization"
repository = "https://github.com/spectra-to-knowledge/miadb-visualization"
documentation = "https://github.com/spectra-to-knowledge/miadb-visualization"
keywords = ["knowledgeExtraction", "spectralInformation", "queryingSystem"]
classifiers =[
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only"
]
exclude = [
    ".bumpversion.cfg",
    ".coveragerc",
    ".flake8",
    ".readthedocs.yml",
    "CITATION.cff",
    "docker-compose.yml",
    "Dockerfile",
    "poetry.lock",
    "tox.ini"
]
include = [
    "docs/source/*.py",
    "docs/source/*.rst",
    "docs/source/*.png",
    "AUTHORS.rst",
    "CHANGELOG.rst",
    "LICENSE",
    "README.rst"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
click = "^8.1.7"
gensim = "^4.3.3"
importlib_resources = "^6.4.5"
matchms = "^0.27.0"
matplotlib = "3.7.2"
ms2deepscore = "^2.4.0"
numpy = "^1.26.4"
openpyxl = "^3.1.5"
pandas = "^2.2.3"
polars = "^1.14.0"
rdkit = "^2024.3.6"
scipy = "1.13.1"
seaborn = "^0.13.2"
spec2vec = "^0.8.0"

[tool.poetry.scripts]
mia-visualization = "mia-visualization.cli:main"


[tool.black]
line-length = 100
target-version = ["py312"]


[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
reverse_relative = true


[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]


[tool.doc8]
max-line-length = 120


[tool.flake8]
# check  .flake8


[tool.ruff]
unfixable = [
    "ERA", # do not autoremove commented out code
]
target-version = "py312"
line-length = 88
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry_plugin_export"]
required-imports = ["from __future__ import annotations"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[options.entry_points]
console_scripts = "mia-visualization = mia-visualization.cli:main"

[options.packages.find]
where = "src"

[options.package_data]
miadbviz = "data/.*"

[tool.setuptools_scm]

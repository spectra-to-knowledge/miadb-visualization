[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "miadbviz"
version = "0.0.1"
description = "Short Description TODO"
authors = [
    {name = "Sarah Szwarc", email = "sarah.szwarc@universite-paris-saclay.fr"},
]
requires-python = "<3.13,>=3.10"
keywords = [
    "knowledgeExtraction",
    "spectralInformation",
    "queryingSystem",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
]
license = {text = "LICENSE"}
readme = "README.rst"

dependencies = [
    "click<9.0.0,>=8.1.7",
    "gensim<5.0.0,>=4.3.2",
    "importlib-resources<7.0.0,>=6.5.2",
    "matchms<1.0.0,>=0.28.2",
    "matplotlib<4.0.0,>=3.7.2",
    "ms2deepscore<3.0.0,>=2.5.0",
    "numpy<2.0.0,>=1.26.4",
    "openpyxl<4.0.0,>=3.1.5",
    "pandas<3.0.0,>=2.2.3",
    "polars<2.0.0,>=1.19.0",
    "rdkit<2025.0.0,>=2024.9.4",
    "scipy<2.0.0,>=1.14.1",
    "seaborn<1.0.0,>=0.13.2",
    "spec2vec<1.0.0,>=0.8.0",
]

[options.entry_points]
console_scripts = "mia-visualization = mia-visualization.cli:main"

[options.packages.find]
where = "src"

[options.package_data]
miadbviz = "data/.*"

[project.urls]
homepage = "https://github.com/spectra-to-knowledge/miadb-visualization"
repository = "https://github.com/spectra-to-knowledge/miadb-visualization"
documentation = "https://github.com/spectra-to-knowledge/miadb-visualization"

[project.scripts]
mia-visualization = "mia-visualization.cli:main"

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
reverse_relative = true

[tool.doc8]
max-line-length = 120

[tool.flake8]
# check  .flake8

[tool.pdm.build]
includes = ["docs/source/*.py", "docs/source/*.rst", "docs/source/*.png", "src/", "AUTHORS.rst", "CHANGELOG.rst", "LICENSE", "README.rst"]
excludes = [".bumpversion.cfg", ".coveragerc", ".flake8", ".readthedocs.yml", "CITATION.cff", "docker-compose.yml", "Dockerfile", "uv.lock", "tox.ini"]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
unfixable = [
    "ERA", # do not autoremove commented out code
]
target-version = "py312"
line-length = 88
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry_plugin_export"]
required-imports = ["from __future__ import annotations"]
